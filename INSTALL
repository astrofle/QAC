

1) CASA:

You will need to install CASA before you can use QAC.
See https://casa.nrao.edu/casa_obtaining.shtml

2) TP2VIS:

If you have not installed some version of "tp2vis" you can do that
from within QAC:   pick the public version:
	make tp2vis
it just needs tp2vis.py

3) QAC

You can either manually load the appropriate python file(s) using
python's execfile() function, for example 

	 execfile('qac.py')
	 execfile('tp2vis.py')

but you will need to know the locations of these files. We promote
using CASA's ~/.casa/init.py method. With this you will automatically
have thq QAC functions available within CASA each time you use CASA.
For this, copy the contents of the QAC/casa.init.py into your
~/.casa/init.py but you may need to modify the location of your
personal qac_root, or (recommended) use a symlink where this was
installed on your system

For example, the following commands would work just fine:


    mkdir -p  ~/.casa
    cd  ~/.casa
    git clone https://github.com/teuben/QAC
    cat casa.init.py >> ~/.casa/init.py
    cd QAC
    make tp2vis

The next time CASA starts, you will see the QAC routines are loaded,
as well have access to the tp2vis routines.

An even easier way is to use the following one liner in your ~/.casa/init.py
script:
    execfile(os.environ['HOME'] + '/.casa/QAC/casa.init.py')


FUTURE:
-------

In the current CASA environment there are two other ways QAC could be
installed:
 
- the "buildmytasks" method (supposedly deprecated?)
- python's "setup.py" method (e.g. ADMIT uses this)

but none are supported in this development version of QAC. They might
be in some future release, depending on further development of CASA.
As it stands now, using the execfile() style to load the correct files
is the more pragmatic approach, well realizing this will have to be
replaced when CASA switches to Python 3.



